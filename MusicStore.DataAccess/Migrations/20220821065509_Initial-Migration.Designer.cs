// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicStore.DataAccess;

#nullable disable

namespace MusicStore.DataAccess.Migrations
{
    [DbContext(typeof(MusicStoreDbContext))]
    [Migration("20220821065509_Initial-Migration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MusicStore.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Rock",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            Name = "Jazz",
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            Name = "Metal",
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            Name = "Alternative",
                            Status = true
                        },
                        new
                        {
                            Id = 5,
                            Name = "Disco",
                            Status = true
                        },
                        new
                        {
                            Id = 6,
                            Name = "Blues",
                            Status = true
                        },
                        new
                        {
                            Id = 7,
                            Name = "Latin",
                            Status = true
                        },
                        new
                        {
                            Id = 8,
                            Name = "Reggae",
                            Status = true
                        },
                        new
                        {
                            Id = 9,
                            Name = "Pop",
                            Status = true
                        },
                        new
                        {
                            Id = 10,
                            Name = "Classical",
                            Status = true
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
